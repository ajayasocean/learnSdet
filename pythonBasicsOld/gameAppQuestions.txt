----------Game Testing:

1. Several kinds of testing available for the game tester are:

1. Combinational testing : experimental design to to generate test cases, increases test execution efficiency, provide better quality, reduce cost and better phase containment.
2. Testing for cleaning room : No programmer testing method, This approach combines mathematical reasoning, design refinement and statistical reasoning during test case generation and testing
3. Testing for ensuring functionality : complex testing method under black-box technique, app works in minimized mode, the app allows social networking options, supports payment gateways, and many more.
4. Testing for ensuring compatibility : with respect to the hardware, graphics and software configuration, Confirms workability and stability of the software
5. Tree testing : Similar to usability testing, helps to select the proper set of tests for the given set of code changes.
6. Adhoc: unplanned, Error Guessing
7. Load Testing: Load to break system, test performance, infrastructure, sustainability of the app with peak user load
8. Play testing: game testing by playing the game to analyse non-functional features like fun factors, difficulty levels, balance, etc.



2.Below techniques normally taken by any tester as well as a game tester:

1. Write both the test cases positive and negative.
2. Evaluate any rectification in varieties exception paths for ensuring the quality of the product.
3. Boundary value analysis or error guessing.
4. Alpha, beta, gamma testing


Apps testig:

1. How many types of mobile applications
Native Application : built in a specific programming language for the particular device platform, iOS or Android
Web Application: A web application runs inside a mobile web browser.
Hybrid Application: A hybrid application is a combination of a native app and a web app.

List out the types of mobile app testing:
1. Usability Testing
2. Compatibility Testing
3. Interface Testing
4. Services Testing
5. Low-level resource Testing
6. Performance Testing
7. Operational Testing
8. Installation Testing
9. Security Testing

2. What are the common challenges in mobile application testing faced by most testers?
Executing test cases with various operating systems
Testing application’s functionalities on a wide range of handsets
Screen size fragmentation
Testing applications on different mobile networks
Different application types (native, hybrid or web app) require different ways to test
The choice of the right mobile testing tool for QA team

3. What types of mobile testing should be included in the Android testing strategy?
unit testing, system testing, integration testing, and operation testing

4. What is the strategy used to test a new mobile app? Which types of testing should be included?
a. Selection of the devices
b. Utilizing emulators
Types of testing:
Functional testing
System integration testing
Installation and uninstallation of the application
HTML control testing
Performance testing
Testing multiple mobile OS
Cross-browser and cross-device testing
Gateway testing
Network and battery testing
Intrupt testing

5. What does an automated test plan for Mobile App contain?
Similar to the plan of other application under tests, a plan designed for automated mobile application testing should include:
Testing scope and objectives
Selected automation tool
Required features to be tested:
– Performance
– Security
– Network
– Size
– Battery memory
Test cases
Test strategy
Person in charge
Time frame
Resources required


6. List of the best practices for Android Testing
a. Developers must prepare the test cases when they are writing the codes simultaneously.
b. All of the test cases should be stored and well-documented for reusability.
c. Apply continuous integration and execute tests once the code is changed
d. Avoid using rooted devices and emulators to achieve the most reliable results

7. While planning to perform an end to end mobile testing, what are the primary criteria you have to consider?
In an end-to-end mobile testing process, QA teams test the entire application from beginning to end to ensure its flow behaves as expected. Throughout these steps, there are some of the many critical requirements to consider:
Is the application successfully installed across various mobile models, gadgets, and operating systems?
a. Does the application launch smoothly with or without a network?
b. What are the orientations that the application supports and how do they work?
c. Does the application perform well on different kinds of devices and network scenarios?
d. How does the application respond when it is used? (i.e. response speed and time)

8. How to test CPU usage on mobile devices?
There are multiple tools available on Google Play or App Store designed for CPU usage testing, such as CPU Monitor, CPU Stats, Usemon, CPU-Z, etc. These are an advanced tool that records historical information about processes running on your device.

9. Explain how A/B testing is done for the iOS app?
The A/B testing for iOS can be done through three steps:
Step 1: Configuring a test that prepares two versions of your iOS application (A&B) with required test metrics
Step 2: Testing both of the iOS versions above on devices simultaneously
Step 3: Analyzing the test results to measure and select which will be the better version to release
